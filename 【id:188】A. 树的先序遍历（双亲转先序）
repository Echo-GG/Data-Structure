#include <iostream>
#include <vector>
#include <string>
using namespace std;

void dfs(int u, const vector<vector<int>>& children, const vector<char>& val) 
{
    cout << val[u];
    for (int v : children[u]) 
		dfs(v, children, val);
}

int main()
 {

    int t;
    cin>>t;
    while (t--) 
	{
        int n;
        cin >> n;
        vector<char> val;
        for(int i=0;i<n;i++)
        {
        	char c;
        	cin>>c;
        	val.push_back(c);
		}
  
        vector<int> parent(n);
        for (int i = 0; i < n; ++i) 
			cin >> parent[i];

        vector<vector<int>> children(n);
        int root = -1;
        for (int i = 0; i < n; ++i) 
		{
            if (parent[i] == -1) 
				root = i;
            else 
				children[parent[i]].push_back(i);
        }

        if (root != -1) 
			dfs(root, children, val);
        cout << endl;
    }
    return 0;
}
